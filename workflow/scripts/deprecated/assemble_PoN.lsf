#!/bin/bash 
#BSUB -sla CMOMEM -R highmem
#BSUB -J PoN_assembly                                             
#BSUB -n 8                # number of core(tasks) for parallel jobs          
#BSUB -R rusage[mem=4]    # expected resorce consumption for memory
#BSUB -W 4:00            # run time limit (hours)
#BSUB -o /home/zhangh5/work/Tapestri_batch2/pipeline_results_custom/normal_pancreas/PoN_assembly.stdout
#BSUB -eo /home/zhangh5/work/Tapestri_batch2/pipeline_results_custom/normal_pancreas/PoN_assembly.stderr

if [ -f ~/.bashrc ] ; then
    . ~/.bashrc
fi

module load bcftools
individual_prev_threshold='N_PASS(GT="alt") > 2' # 2/N single cells have this mutation
pop_prev_threashold="+4" # > 4/8 samples have this mutation

normal_cohort_dir=/home/zhangh5/work/Tapestri_batch2/pipeline_results_custom/normal_pancreas

mkdir -p "$normal_cohort_dir/PoN_assembly/sc_prev_filtered_individual_vcfs"
mkdir -p "$normal_cohort_dir/PoN_assembly/pop_prev_filtered_individual_vcfs"

normal_vcfs=$(find $normal_cohort_dir/*/bcf_mpileup/combined_vcf/ \
    -name "*combined_VCF.filtered.vcf.gz" )

# # (1) filter each individual normal sample's composite VCF for variants of signficiant sc-mutational prevalence
# echo -e '##INFO=<ID=N_CELLS_MUT,Number=1,Type=Integer,Description="Number of cells mutated for this mutation">' > $normal_cohort_dir/PoN_assembly/sc_prev_filtered_individual_vcfs/sc_prev_filtered.annots.hdr
for n_vcf_i in $normal_vcfs
do
    out_name=$(basename $n_vcf_i)
    #out_ann="$normal_cohort_dir/PoN_assembly/sc_prev_filtered_individual_vcfs/${out_name/combined_VCF.filtered.vcf.gz/sc_prev_filtered_ann.txt.gz}"
    out_filtered_vcf="$normal_cohort_dir/PoN_assembly/sc_prev_filtered_individual_vcfs/${out_name/combined_VCF.filtered.vcf.gz/sc_prev_filtered.vcf.gz}"
    # # create annotation: filter down to variants with sufficient sc-mutation prevalence
    # bcftools filter \
    #     -i "${individual_prev_threshold}" $n_vcf_i | \
    # bcftools query \
    #     -H \
    #     -f '%CHROM\t%POS\t%REF\t%ALT\t%N_PASS(GT="alt")\n' | \
    # bgzip -c > $out_ann && \
    # tabix -s1 -b2 -e2 $out_ann && \
    # echo "[INFO] --- ${out_name} annotation done"

    # # write new VCF
    # bcftools annotate \
    #     -a $out_ann \
    #     -h $normal_cohort_dir/PoN_assembly/sc_prev_filtered_individual_vcfs/sc_prev_filtered.annots.hdr \
    #     -c CHROM,POS,REF,ALT,INFO/N_CELLS_MUT \
    #     -Oz \
    #     -o $out_filtered_vcf \
    #     $n_vcf_i && \
    # tabix $out_filtered_vcf

    bcftools filter \
        -i "${individual_prev_threshold}" \
        -Oz \
        -o $out_filtered_vcf \
        $n_vcf_i && \
    tabix $out_filtered_vcf && \
    echo "[INFO] --- ${out_name} filtered done"
done

# rm $normal_cohort_dir/PoN_assembly/sc_prev_filtered_individual_vcfs/*ann.txt*

# (2) take intersection across all normal samples to identify significantly recurrent variants;
#     write each individual's subset VCF to directory "$normal_cohort_dir/PoN_assembly"

sc_prev_filtered_vcfs=$(find "$normal_cohort_dir/PoN_assembly/sc_prev_filtered_individual_vcfs" -name "*sc_prev_filtered.vcf.gz")
bcftools isec \
    -p "$normal_cohort_dir/PoN_assembly/pop_prev_filtered_individual_vcfs" \
    -n ${pop_prev_threashold} \
    -Oz \
    $sc_prev_filtered_vcfs && \
echo "[INFO] --- intersection done"

# recurrently-mutated sites ------> $normal_cohort_dir/PoN_assembly/pop_prev>N_individual_vcfs/sites.txt

# (3)

pop_prev_filtered_vcfs=$(find "$normal_cohort_dir/PoN_assembly/pop_prev_filtered_individual_vcfs" -name "000*.vcf.gz")
for filtered_n_vcf_i in $pop_prev_filtered_vcfs
do
    # for each variant, calculate sc-mutational prevalence
    bcftools query \
        -H \
        -f '%CHROM\t%POS\t%REF\t%ALT\t%N_PASS(GT="alt")\n' \
        $filtered_n_vcf_i > ${filtered_n_vcf_i/vcf.gz/var_sc_mut_prev.txt} && \
    echo "[INFO] --- ${filtered_n_vcf_i} sc_mut_prev calculation done"
done